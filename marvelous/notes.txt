handleClick(ev) {
  ev.preventDefault();
  this.nextPage();
}

this.handleClick = this.handleClick.bind(this);


this.getData = this.getData.bind(this);


------------------------------------------------------------------------------


Have search single character name into different component. Have it render.
Fix the previous button from NaN to a number.
Have previous button after incrementing pages.
Find another solution to have characters list refresh when going from characters to home to characters.
Loading Screen should render gif images

Have a conditional rendering statements to allow characters to only render when there is a description and a image. If there is information about the characters such as comics and other attributes; (Don't do this step.)
CLEAN UP CODE SUCH AS PAGE COMPONENTS. THE FUNCTIONS SHOULD BE REFACTORED.


https://lowbrowcomics.files.wordpress.com/2015/05/01-klqa0to.gif Loading screen <<<


























import React, { Component } from 'react';
import './App.css';
import { Route, Link } from "react-router-dom";
import { fetchData, fetchName } from './services/api';
import Header from './components/Header';
import Characters from './components/Characters';
import Welcome from './components/Welcome';
import CharacterDetails from './components/CharacterDetails';
import Footer from './components/Footer';

class App extends Component {

  constructor() {
    super();
    this.state = {
      characters: [],
      pageNumber: 0,
      userInput: '',
      name: []
    }

    this.selectPage = this.selectPage.bind(this);
    this.nextPage = this.nextPage.bind(this);
    this.prevPage = this.prevPage.bind(this);
    this.resetCharacter = this.resetCharacter.bind(this);
    this.handleChange = this.handleChange.bind(this);
    this.handleSubmit = this.handleSubmit.bind(this);
  }


  componentDidMount() {
    this.getData(this.pageNumber);
}

  async getData(page) {
    const data = await fetchData(page * 100);
      this.setState({
        characters: data
    })
  }


  nextPage(nextPage) {
    this.getData(nextPage);
    this.setState({
      pageNumber: nextPage
    })
  }

  prevPage(e) {
  const prevPage = this.state.pageNumber - 1;
  this.getData(prevPage);
  this.setState({
    pageNumber: prevPage
  })
}

  selectPage(page) {
    this.getData(page);
    this.setState({
      pageNumber: page
    })
  }


resetCharacter() {
  this.setState({
    characters: null
  })
}

handleChange(ev) {
  const { name , value } = ev.target;
  this.setState({
    [name]: value
  });
}

async handleSubmit(ev) {
 ev.preventDefault();
 const singleName = this.state.userInput;
 const names = await fetchName(singleName);
 console.log(names);
 this.setState({
   name: names
 })
}


  render() {
    return (
      <div className="App">
        <Header nextPage={this.nextPage}
        handleChange={this.handleChange}
        handleSubmit={this.handleSubmit} />
        <div className='main-background'>
          <div>
            <Route exact path='/' render={(props) => (
              <Welcome
              characterName={this.state.name} />
            )} />
          </div>

          <Route path='/characterlist' render={(props) => (
            <Characters
              characters={this.state.characters} /* this is characters list */
              selectPage={this.selectPage}
              nextPage={this.nextPage}
              prevPage={this.prevPage}
              pageNumber={this.state.pageNumber}
              resetCharacter={this.resetCharacter} />
          )} />
        </div>
        <Footer/>
      </div>
    )
  }
}

export default App;




import React from 'react';
import { Link, Route } from 'react-router-dom';


function Welcome(props) {
  return(
    <div className='main-welcome'>
      <div className='single-character'>
        {props.characterName.map(info => (
          <div className='single-character' key={info.id}>
            <h1>{info.name}</h1>
            <img src={info.thumbnail.path + '/standard_fantastic.jpg'} alt='Images Not Available' />
            <p>{info.description}</p>
            <p>Comics Available: {info.comics.available}</p>
          </div>
        ))}
      </div>
    </div>
  )
}


export default Welcome;



import React from 'react';
import { Link, Route } from 'react-router-dom';


function Header(props) {
  return(
    <div className='main-nav-form-container'>
      <header className='main-header'>
        <div id='main-logo'>
          <img id='logo' src='https://66.media.tumblr.com/3b2b790a7fa5601c643871e57ad3851b/tumblr_p5abebOejb1u9mjoso1_400.gif' alt='test' />
        </div>
        <div>
          <h1>Marvelous Database</h1>
          <small>Search Your favorite character's origins, powers and abilities, and more!</small>
        </div>

        <nav className='main-nav'>
          <Link to='/'>Home</Link>
          <Link to='/characterList'>Characters</Link>
          <Link to='/about'>About</Link>
        </nav>
        <div>
          <form onSubmit={props.handleSubmit}>
            <input id='main-input' type='text' placeholder='Type Characters Here' value={props.name} name='userInput' onChange={props.handleChange}/>
            <button id='main-button'>Enter</button>
          </form>
        </div>
      </header>
    </div>
  )
}

{/*onClick={() => {
  props.nextPage(0);
}}

the code above allows the app to reset the characters to default.
It calls the api again.
*/}


export default Header;





import React from 'react';


function Footer() {
  return(
    <div className='main-footer'>
      <footer>
        <h3>EXPLORE MARVEL UNIVERSE</h3>
        <div id='footer-list'>
          <ul>
            <li><a href='https://www.marvel.com/games' target='_blank'>GAMES</a></li>
            <li><a href='https://www.marvel.com/movies' target='_blank'>MOVIES</a></li>
            <li><a href='https://www.marvel.com/tv-shows' target='_blank'>TV SHOWS</a></li>
            <li>WIKIS</li>
          </ul>
        </div>
        <p>Copyright &copy; 2019 James Yun. All Rights Reserved.</p>
      </footer>
    </div>
  )
}

export default Footer;
